---
interface Props {
  color: string
}

const { color } = Astro.props;
---

<button
  class="theme-toggle"
  type="button"
  title="Toggle theme"
  aria-label="Toggle theme"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    aria-hidden="true"
    width="2.5em"
    height="2.5em"
    fill={color}
    stroke-linecap="round"
    class="theme-toggle__classic"
    viewBox="0 0 32 32"
  >
    <clipPath id="theme-toggle__classic__cutout">
      <path d="M0-5h30a1 1 0 0 0 9 13v24H0Z"></path>
    </clipPath>
    <g clip-path="url(#theme-toggle__classic__cutout)">
      <circle cx="16" cy="16" r="9.34"></circle>
      <g stroke="currentColor" stroke-width="1.5">
        <path d="M16 5.5v-4"></path>
        <path d="M16 30.5v-4"></path>
        <path d="M1.5 16h4"></path>
        <path d="M26.5 16h4"></path>
        <path d="m23.4 8.6 2.8-2.8"></path>
        <path d="m5.7 26.3 2.9-2.9"></path>
        <path d="m5.8 5.8 2.8 2.8"></path>
        <path d="m23.4 23.4 2.9 2.9"></path>
      </g>
    </g>
  </svg>
</button>

<script>
  const toggleThemeButton: HTMLElement | null = document.querySelector(".theme-toggle");
  const rootElement: HTMLElement = document.documentElement;

  toggleThemeButton?.addEventListener("click", () => {
    rootElement.classList.toggle("dark");

    if (rootElement.classList.value === "dark") {
      toggleThemeButton.classList.add("theme-toggle--toggled");
      localStorage.setItem("theme", "dark");
    } else {
      toggleThemeButton.classList.remove("theme-toggle--toggled");
      localStorage.setItem("theme", "light");
    }
  });
</script>
